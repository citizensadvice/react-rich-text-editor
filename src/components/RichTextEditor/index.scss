@import "../../globals/variables.scss";

.notes {
  &.full-screen {
    bottom: 0;
    left: 0;
    position: fixed;
    right: 0;
    top: 0;
    z-index: 999; // This feels brittle, could create a system for app wide z-index.
  }
}

.rte_hidden_textarea {
  width: 0;
  padding: 0;
  margin: 0;
  position: absolute !important;
}

.rte-format-toolbar {
  display: flex;
  flex-wrap: wrap;
  padding: 0.7rem 0.5rem;

  &_container {
    border-bottom: $px1 solid $color-black-l85;
    display: flex;
    margin-bottom: 0.5rem;

    .full-screen & {
      justify-content: center;
    }
  }

  &_category {
    align-items: center;
    border-right: $px1 solid $color-black-l70;
    display: flex;
    justify-content: center;
    max-height: 1rem;
    position: relative;

    &:last-child {
      border-right: 0;
    }

    &-info {
      background-color: $color-white;
      border: $px1 solid $color-black-l70;
      left: 50%;
      padding: 1rem;
      position: absolute;
      right: 10rem;
      top: 1.75rem;
      transform: translateX(-50%);
      width: 20rem;
      z-index: 999;
    }

    &-key {
      background-color: $color-black-l60;
      border: $px1 solid $color-black-l70;
      color: $color-white;
      padding: 0 0.5em;
    }
  }

  &_button {
    border: none;
    color: $color-black-l20;
    display: flex !important;
    margin: 0 0.2rem;
    width: 1.7rem;
    height: 1.7rem;
    cursor: pointer;

    &:hover {
      border: $px1 solid $color-black-l70;
    }

    &:focus {
      background: transparent;
      border: $px1 solid $color-black-l70;
    }

    &.active {
      border: $px1 solid $color-black-l70;
    }

    &.disabled {
      filter: invert(70%) sepia(0%) saturate(1704%) hue-rotate(136deg)
        brightness(91%) contrast(96%);
      cursor: not-allowed !important;

      &:hover,
      &:focus {
        background-color: unset;
        border: unset;
        cursor: not-allowed !important;
      }
    }
    &.readonly {
      pointer-events: none;
    }
  }
}

.rte-form-control {
  background: $color-white;
  border-radius: 0;
  border: $px1 solid $color-cloudy;
  height: 15rem;
  width: 100%;

  &.full-screen {
    height: 100%;
  }

  &.input-group {
    padding: 0;
    z-index: initial;
  }

  &.has-info {
    border-color: $color-lavender;
  }

  // All invalid inputs will have this attribute
  &.is-invalid {
    border-color: $color-tomato;
  }

  &.is-focused {
    border: $px2 solid $color-squash;
    box-shadow: none;

    // These two are here because it's the parent that controls the focus state.
    .rte-format-toolbar {
      padding-bottom: 0.7rem;
      padding-left: calc(0.5rem + -1px);
      padding-right: calc(0.5rem + -1px);
      padding-top: calc(0.7rem + -1px);
    }

    .rich-text-editor {
      padding-left: calc(0.8rem + -1px);
      padding-right: calc(0.8rem + -1px);
    }
  }

  &:disabled,
  &[readonly] {
    background-color: $color-black-l95;
    border-color: $color-black-l80;
    cursor: not-allowed;

    &:focus {
      border-color: $color-squash;
    }
  }

  &[readonly]::placeholder {
    color: $color-white;
  }

  &:disabled {
    &::placeholder {
      color: $color-black-l80;
    }
  }
}

.rich-text-editor {
  height: 11rem;
  overflow-y: scroll;
  padding: 0.5rem 0.8rem;

  &.full-screen {
    font-size: 1rem;
    height: 100%;
    padding-bottom: 5rem;
    padding-top: 1rem;

    // Target all children of the slate editor in order to center them
    // and give them a max width of 592px, which is an "ideal words
    // per line limit".
    & > * {
      margin-left: auto;
      margin-right: auto;
      width: 37rem;
    }
  }
}

.rte {
  &-indent-increase {
    text-indent: 2em;
  }
  &-paragraph {
    &-left {
      text-align: left;
    }
    &-center {
      text-align: center;
    }
    &-right {
      text-align: right;
    }
  }
  &-link-modal {
    .modal-content {
      .modal-body {
        display: flex;
        flex-direction: column;

        .btn {
          align-self: flex-end;
          justify-self: end;
        }
      }
    }
  }
  &-link-new-window {
    &:hover {
      cursor: pointer;
    }
    &-no-text {
      &::after {
        // This is to overwrite page-defaults style -
        // remove pseudo-element (icon) when the link has no text
        display: none !important;
      }
    }
  }
  &_hidden_textarea {
    position: relative;
    z-index: -1;
    height: 0;
  }
}
